{"version":3,"file":"component---src-pages-ingredients-js-7b157b902f25a0b92aae.js","mappings":"oQASe,SAASA,GAAgB,KAAEC,IACxC,MACEC,SAAWC,MAAOD,GAClBE,aAAeD,MAAOC,GACtBC,SAAWF,MAAOE,IAChBJ,EACEK,GAAiBC,EAAAA,EAAAA,UAAQ,KAC7B,MAAMC,EAASJ,EAAYK,KAAKC,IAC9B,MAAMC,EAAoBT,EAAQU,QAAQC,GACxCA,EAAOC,WAAWC,SAASL,EAAWM,aAElCC,EAAoBZ,EAAQO,QAAQM,GACxCP,EAAkBQ,MACfC,GAAqBA,EAAiBF,SAAWA,EAAOG,SAI7D,MAAO,IACFX,EACHR,QAASS,EACTN,QAASY,MASb,OALAT,EAAOc,MACL,CAACC,EAAGC,IACFD,EAAEE,SAASC,cAAcF,EAAEC,WAAaF,EAAEI,KAAKD,cAAcF,EAAEG,QAG5DnB,IACN,CAACN,EAASE,EAAaC,IAE1B,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKuB,MAAM,qBACX,UAAC,IAAD,YACE,SAAC,IAAD,WACE,8CAEDtB,EAAeG,KAAKC,IACnB,mBAAC,IAAD,IACMA,EACJmB,IAAKnB,EAAWM,UAChBd,QAASQ,EAAWR,QACpBG,QAASK,EAAWL,kBAQhCL,EAAgB8B,UAAY,CAC1B7B,KAAM8B,IAAAA,OAAAA","sources":["webpack://diy-flavor-safety/./src/pages/ingredients.js"],"sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport IngredientCard from 'components/IngredientCard';\n\nexport default function IngredientsPage({ data }) {\n  const {\n    flavors: { nodes: flavors },\n    ingredients: { nodes: ingredients },\n    vendors: { nodes: vendors }\n  } = data;\n  const ingredientData = useMemo(() => {\n    const result = ingredients.map((ingredient) => {\n      const ingredientFlavors = flavors.filter((flavor) =>\n        flavor.casNumbers.includes(ingredient.casNumber)\n      );\n      const ingredientVendors = vendors.filter((vendor) =>\n        ingredientFlavors.some(\n          (ingredientFlavor) => ingredientFlavor.vendor === vendor.code\n        )\n      );\n\n      return {\n        ...ingredient,\n        flavors: ingredientFlavors,\n        vendors: ingredientVendors\n      };\n    });\n\n    result.sort(\n      (a, b) =>\n        a.category.localeCompare(b.category) || a.name.localeCompare(b.name)\n    );\n\n    return result;\n  }, [flavors, ingredients, vendors]);\n\n  return (\n    <Layout>\n      <SEO title=\"Ingredient Info\" />\n      <Container>\n        <Row>\n          <h1>Ingredient Info</h1>\n        </Row>\n        {ingredientData.map((ingredient) => (\n          <IngredientCard\n            {...ingredient}\n            key={ingredient.casNumber}\n            flavors={ingredient.flavors}\n            vendors={ingredient.vendors}\n          />\n        ))}\n      </Container>\n    </Layout>\n  );\n}\n\nIngredientsPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport const query = graphql`\n  query IngredientsSearchQuery {\n    flavors: allFlavorsJson {\n      nodes {\n        casNumbers\n        name\n        vendor\n      }\n    }\n    ingredients: allIngredientsJson {\n      nodes {\n        casNumber\n        category\n        created\n        description\n        links {\n          href\n          title\n        }\n        name\n        updated\n      }\n    }\n    vendors: allVendorsJson {\n      nodes {\n        code\n        name\n      }\n    }\n  }\n`;\n"],"names":["IngredientsPage","data","flavors","nodes","ingredients","vendors","ingredientData","useMemo","result","map","ingredient","ingredientFlavors","filter","flavor","casNumbers","includes","casNumber","ingredientVendors","vendor","some","ingredientFlavor","code","sort","a","b","category","localeCompare","name","title","key","propTypes","PropTypes"],"sourceRoot":""}