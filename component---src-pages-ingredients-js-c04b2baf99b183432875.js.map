{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/ListGroupItem.js","webpack:///./src/pages/ingredients.js","webpack:///./src/components/IngredientCard.js","webpack:///./node_modules/react-bootstrap/esm/ListGroup.js"],"names":["ListGroupItem","forwardRef","_ref","ref","bsPrefix","active","disabled","className","variant","action","as","eventKey","onClick","props","handleClick","event","preventDefault","stopPropagation","createElement","href","defaultProps","displayName","IngredientsPage","data","flavors","nodes","ingredients","vendors","state","map","ingredient","ingredientFlavors","filter","flavor","casNumbers","includes","casNumber","ingredientVendors","vendor","some","ingredientFlavor","code","sort","a","b","category","localeCompare","name","render","this","title","key","Component","query","IngredientCard","Header","target","rel","icon","faExternalLinkAlt","size","badgeProps","Body","times","description","links","length","activeKey","link","created","updated","getRelativeTime","Link","to","getFlavorSlug","getCategoryVariant","getVendorSlug","ListGroup","horizontalVariant","_useUncontrolled","horizontal","_useUncontrolled$as","controlledProps","Item"],"mappings":"4FAAA,0GAYIA,EAAgB,IAAMC,YAAW,SAAUC,EAAMC,GACnD,IAAIC,EAAWF,EAAKE,SAChBC,EAASH,EAAKG,OACdC,EAAWJ,EAAKI,SAChBC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKM,QACfC,EAASP,EAAKO,OACdC,EAAKR,EAAKQ,GACVC,EAAWT,EAAKS,SAChBC,EAAUV,EAAKU,QACfC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvIE,EAAW,YAAmBA,EAAU,mBACxC,IAAIU,EAAc,uBAAY,SAAUC,GACtC,GAAIT,EAGF,OAFAS,EAAMC,sBACND,EAAME,kBAIJL,GAASA,EAAQG,KACpB,CAACT,EAAUM,IACd,OAAoB,IAAMM,cAAc,IAAiB,YAAS,CAChEf,IAAKA,GACJU,EAAO,CACRF,SAAU,YAAaA,EAAUE,EAAMM,MAEvCT,GAAIA,IAAOD,EAASI,EAAMM,KAAO,IAAM,SAAW,OAClDP,QAASE,EACTP,UAAW,IAAWA,EAAWH,EAAUC,GAAU,SAAUC,GAAY,WAAYE,GAAWJ,EAAW,IAAMI,EAASC,GAAUL,EAAW,iBAGrJJ,EAAcoB,aArCK,CACjBZ,QAAS,KACTH,QAAQ,EACRC,UAAU,GAmCZN,EAAcqB,YAAc,gBACb,O,kQCrCMC,E,oBAKnB,WAAYT,GAAQ,IAAD,KACjB,cAAMA,IAAN,MAQSA,MALPU,KACoBC,EALL,EAKbA,QAAWC,MACWC,EANT,EAMbA,YAAeD,MACGE,EAPL,EAObA,QAAWF,MAPE,OAWjB,EAAKG,MAAQ,CACXF,YAAaA,EAAYG,KAAI,SAACC,GAC5B,IAAMC,EAAoBP,EAAQQ,QAAO,SAACC,GAAD,OACvCA,EAAOC,WAAWC,SAASL,EAAWM,cAElCC,EAAoBV,EAAQK,QAAO,SAACM,GAAD,OACvCP,EAAkBQ,MAChB,SAACC,GAAD,OAAsBA,EAAiBF,SAAWA,EAAOG,WAI7D,OAAO,OAAP,UACKX,EADL,CAEEN,QAASO,EACTJ,QAASU,QAKf,EAAKT,MAAMF,YAAYgB,MACrB,SAACC,EAAGC,GAAJ,OACED,EAAEE,SAASC,cAAcF,EAAEC,WAAaF,EAAEI,KAAKD,cAAcF,EAAEG,SAhClD,E,0GAoCnBC,OAAA,WAAU,IACAtB,EAAgBuB,KAAKrB,MAArBF,YAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwB,MAAM,oBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,gDAEDxB,EAAYG,KAAI,SAACC,GAAD,OACf,kBAAC,IAAD,iBACMA,EADN,CAEEqB,IAAKrB,EAAWM,UAChBZ,QAASM,EAAWN,QACpBG,QAASG,EAAWH,iB,GAxDWyB,aAiEhCC,EAAK,c,iXC3DGC,E,sLAsHnBN,OAAA,WAAU,IAAD,EAC+BC,KAAKpC,MAAnCuB,EADD,EACCA,UAAWS,EADZ,EACYA,SAAUE,EADtB,EACsBA,KAE7B,OACE,kBAAC,IAAD,CAAMxC,UAAU,QACd,kBAAC,IAAKgD,OAAN,KACE,4BACE,8BACGR,EADH,UAEE,uBACE5B,KAAI,0DAA4DiB,EAChEoB,OAAO,SACPC,IAAI,uBAEHrB,EAAW,IACZ,kBAAC,IAAD,CAAiBsB,KAAMC,IAAmBC,KAAK,QARnD,KAYA,kBAAC,IAAD,CACEf,SAAUA,EACVgB,WAAY,CAAEtD,UAAW,mBAI/B,kBAAC,IAAKuD,KAAN,KACGb,KAAKc,MACLd,KAAKe,YACLf,KAAKgB,MACLhB,KAAKtB,QACLsB,KAAKzB,W,oCAlID,IACHyC,EAAUhB,KAAKpC,MAAfoD,MAER,OAAOA,aAAA,EAAAA,EAAOC,QACZ,kBAAC,WAAD,KACE,4CACA,kBAAC,IAAD,CAAW3D,UAAU,OAAO4D,UAAU,IACnCF,EAAMpC,KAAI,SAACuC,GAAD,OACT,kBAAC,IAAD,CACE3D,QAAM,EACN0C,IAAKiB,EAAKjD,KACVA,KAAMiD,EAAKjD,KACXqC,OAAO,SACPC,IAAI,uBAEHW,EAAKlB,MAPR,IAOe,kBAAC,IAAD,CAAiBQ,KAAMC,YAK1C,O,4BAGO,IAAD,EACmBV,KAAKpC,MAA1BwD,EADE,EACFA,QAASC,EADP,EACOA,QAEjB,OACE,kBAAC,WAAD,KACG,IACD,qCACQ,0BAAMpB,MAAOmB,GAAUE,0BAAgBF,KAE9CC,GAAWD,IAAYC,EACtB,uCACU,0BAAMpB,MAAOoB,IACpBC,0BAAgBD,IAEjB,Q,kCAKS,IACTN,EAAgBf,KAAKpC,MAArBmD,YAER,OAAOA,EACL,kBAAC,WAAD,KACE,mDACA,2BAAIA,IAEJ,O,8BAGS,IACLxC,EAAYyB,KAAKpC,MAAjBW,QAER,OAAOA,aAAA,EAAAA,EAAS0C,QACd,kBAAC,WAAD,KACE,wBAAI3D,UAAU,QAAd,iCACiCiB,EAAQ0C,OADzC,KAGA,kBAAC,IAAD,KACG1C,EAAQK,KAAI,SAACI,GAAD,OACX,kBAAC,IAAD,CACExB,QAAM,EACNC,GAAI8D,OACJrB,IAAQlB,EAAOK,OAAZ,IAAsBL,EAAOc,KAChC0B,GAAIC,wBAAczC,GAClBzB,QAASmE,6BAAmB1C,EAAOY,WAElCZ,EAAOK,OAPV,IAOmBL,EAAOc,WAK9B,O,8BAGS,IACLpB,EAAYsB,KAAKpC,MAAjBc,QAER,OAAOA,aAAA,EAAAA,EAASuC,QACd,kBAAC,WAAD,KACE,8DAAoCvC,EAAQuC,OAA5C,KACA,kBAAC,IAAD,CAAW3D,UAAU,QAClBoB,EAAQE,KAAI,SAACS,GAAD,OACX,kBAAC,IAAD,CACE7B,QAAM,EACNC,GAAI8D,OACJrB,IAAKb,EAAOG,KACZgC,GAAIG,wBAActC,IAEjBA,EAAOS,WAKd,U,8BAnHoCK,c,kCCf5C,kIAaIyB,EAAY,IAAM5E,YAAW,SAAUY,EAAOV,GAChD,IAYI2E,EAZAC,EAAmB,YAAgBlE,EAAO,CAC5CsD,UAAW,aAET5D,EAAYwE,EAAiBxE,UAC7BH,EAAW2E,EAAiB3E,SAC5BI,EAAUuE,EAAiBvE,QAC3BwE,EAAaD,EAAiBC,WAC9BC,EAAsBF,EAAiBrE,GACvCA,OAA6B,IAAxBuE,EAAiC,MAAQA,EAC9CC,EAAkB,YAA8BH,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAYzH,OAVA3E,EAAW,YAAmBA,EAAU,cAItC0E,EADEE,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIF,IAAM9D,cAAc,IAAa,YAAS,CAC5Df,IAAKA,GACJ+E,EAAiB,CAClBxE,GAAIA,EACJH,UAAW,IAAWA,EAAWH,EAAUI,GAAWJ,EAAW,IAAMI,EAASsE,GAAqB1E,EAAW,IAAM0E,SAG1HD,EAAUzD,aAjCS,CACjBZ,QAAS,KACTwE,WAAY,MAgCdH,EAAUxD,YAAc,YACxBwD,EAAUM,KAAO,IACF","file":"component---src-pages-ingredients-js-c04b2baf99b183432875.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nimport Layout from '~components/Layout';\nimport SEO from '~components/SEO';\nimport IngredientCard from '~components/IngredientCard';\n\nexport default class IngredientsPage extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {\n      data: {\n        flavors: { nodes: flavors },\n        ingredients: { nodes: ingredients },\n        vendors: { nodes: vendors }\n      }\n    } = this.props;\n\n    this.state = {\n      ingredients: ingredients.map((ingredient) => {\n        const ingredientFlavors = flavors.filter((flavor) =>\n          flavor.casNumbers.includes(ingredient.casNumber)\n        );\n        const ingredientVendors = vendors.filter((vendor) =>\n          ingredientFlavors.some(\n            (ingredientFlavor) => ingredientFlavor.vendor === vendor.code\n          )\n        );\n\n        return {\n          ...ingredient,\n          flavors: ingredientFlavors,\n          vendors: ingredientVendors\n        };\n      })\n    };\n\n    this.state.ingredients.sort(\n      (a, b) =>\n        a.category.localeCompare(b.category) || a.name.localeCompare(b.name)\n    );\n  }\n\n  render() {\n    const { ingredients } = this.state;\n\n    return (\n      <Layout>\n        <SEO title=\"Ingredient Info\" />\n        <Container>\n          <Row>\n            <h1>Ingredient Info</h1>\n          </Row>\n          {ingredients.map((ingredient) => (\n            <IngredientCard\n              {...ingredient}\n              key={ingredient.casNumber}\n              flavors={ingredient.flavors}\n              vendors={ingredient.vendors}\n            />\n          ))}\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query IngredientsSearchQuery {\n    flavors: allFlavorsJson {\n      nodes {\n        casNumbers\n        name\n        vendor\n      }\n    }\n    ingredients: allIngredientsJson {\n      nodes {\n        casNumber\n        category\n        created\n        description\n        links {\n          href\n          title\n        }\n        name\n        updated\n      }\n    }\n    vendors: allVendorsJson {\n      nodes {\n        code\n        name\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport CategoryInfo from '~components/CategoryInfo';\nimport {\n  getCategoryVariant,\n  getFlavorSlug,\n  getVendorSlug,\n  getRelativeTime\n} from '~utils';\n\nexport default class IngredientCard extends Component {\n  static propTypes = {\n    casNumber: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    created: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    links: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        href: PropTypes.string.isRequired\n      })\n    ),\n    name: PropTypes.string.isRequired,\n    flavors: PropTypes.arrayOf(PropTypes.object),\n    updated: PropTypes.string.isRequired,\n    vendors: PropTypes.arrayOf(PropTypes.object)\n  };\n\n  get links() {\n    const { links } = this.props;\n\n    return links?.length ? (\n      <Fragment>\n        <h6>More Reading</h6>\n        <ListGroup className=\"my-3\" activeKey=\"\">\n          {links.map((link) => (\n            <ListGroupItem\n              action\n              key={link.href}\n              href={link.href}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {link.title} <FontAwesomeIcon icon={faExternalLinkAlt} />\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Fragment>\n    ) : null;\n  }\n\n  get times() {\n    const { created, updated } = this.props;\n\n    return (\n      <Fragment>\n        {' '}\n        <h6>\n          Added <abbr title={created}>{getRelativeTime(created)}</abbr>\n        </h6>\n        {updated && created !== updated ? (\n          <h6>\n            Updated <abbr title={updated}></abbr>\n            {getRelativeTime(updated)}\n          </h6>\n        ) : null}\n      </Fragment>\n    );\n  }\n\n  get description() {\n    const { description } = this.props;\n\n    return description ? (\n      <Fragment>\n        <h6>Information / Notes</h6>\n        <p>{description}</p>\n      </Fragment>\n    ) : null;\n  }\n\n  get flavors() {\n    const { flavors } = this.props;\n\n    return flavors?.length ? (\n      <Fragment>\n        <h6 className=\"mb-3\">\n          Flavors with this ingredient ({flavors.length})\n        </h6>\n        <ListGroup>\n          {flavors.map((flavor) => (\n            <ListGroupItem\n              action\n              as={Link}\n              key={`${flavor.vendor} ${flavor.name}`}\n              to={getFlavorSlug(flavor)}\n              variant={getCategoryVariant(flavor.category)}\n            >\n              {flavor.vendor} {flavor.name}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Fragment>\n    ) : null;\n  }\n\n  get vendors() {\n    const { vendors } = this.props;\n\n    return vendors?.length ? (\n      <Fragment>\n        <h6>Vendors using this ingredient ({vendors.length})</h6>\n        <ListGroup className=\"my-3\">\n          {vendors.map((vendor) => (\n            <ListGroupItem\n              action\n              as={Link}\n              key={vendor.code}\n              to={getVendorSlug(vendor)}\n            >\n              {vendor.name}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Fragment>\n    ) : null;\n  }\n\n  render() {\n    const { casNumber, category, name } = this.props;\n\n    return (\n      <Card className=\"my-3\">\n        <Card.Header>\n          <h3>\n            <span>\n              {name} (CAS #\n              <a\n                href={`http://www.commonchemistry.org/ChemicalDetail.aspx?ref=${casNumber}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {casNumber}{' '}\n                <FontAwesomeIcon icon={faExternalLinkAlt} size=\"xs\" />\n              </a>\n              )\n            </span>\n            <CategoryInfo\n              category={category}\n              badgeProps={{ className: 'float-right' }}\n            />\n          </h3>\n        </Card.Header>\n        <Card.Body>\n          {this.times}\n          {this.description}\n          {this.links}\n          {this.vendors}\n          {this.flavors}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}