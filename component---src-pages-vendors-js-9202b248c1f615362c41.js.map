{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./src/pages/vendors.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_flatten-into-array.js","webpack:///./src/components/VendorCard.js"],"names":["$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","this","length","arguments","VendorsPage","props","data","flavors","nodes","ingredients","vendors","state","vendor","vendorFlavors","filter","flavor","code","vendorIngredients","ingredient","some","vendorFlavor","casNumbers","includes","casNumber","sort","a","b","name","localeCompare","render","title","map","key","Component","query","createHTML","url","isArray","isObject","ctx","IS_CONCAT_SPREADABLE","module","exports","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn","undefined","TypeError","VendorCard","link","flavorCount","className","Header","href","rel","variant","Body","description","activeKey","action","as","Link","to","getFlavorSlug","sortedIngredients","category","toLowerCase","getIngredientSlug","getCategoryVariant"],"mappings":"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","file":"component---src-pages-vendors-js-9202b248c1f615362c41.js","sourcesContent":["'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nimport Layout from '~components/Layout';\nimport SEO from '~components/SEO';\nimport VendorCard from '~components/VendorCard';\n\nexport default class VendorsPage extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {\n      data: {\n        flavors: { nodes: flavors },\n        ingredients: { nodes: ingredients },\n        vendors: { nodes: vendors }\n      }\n    } = this.props;\n\n    this.state = {\n      vendors: vendors.flatMap(vendor => {\n        const vendorFlavors = flavors.filter(\n          flavor => flavor.vendor === vendor.code\n        );\n        const vendorIngredients = ingredients.filter(ingredient =>\n          vendorFlavors.some(vendorFlavor =>\n            vendorFlavor.casNumbers.includes(ingredient.casNumber)\n          )\n        );\n\n        return vendorFlavors.length\n          ? [\n              {\n                ...vendor,\n                flavors: vendorFlavors,\n                ingredients: vendorIngredients\n              }\n            ]\n          : [];\n      })\n    };\n\n    this.state.vendors.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  render() {\n    const { vendors } = this.state;\n\n    return (\n      <Layout>\n        <SEO title=\"Vendor Info\" />\n        <Container>\n          <Row>\n            <h1>Vendor Info</h1>\n          </Row>\n          {vendors.map(vendor => (\n            <VendorCard\n              {...vendor}\n              key={vendor.code}\n              flavors={vendor.flavors}\n              ingredients={vendor.ingredients}\n            />\n          ))}\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query VendorsSearchQuery {\n    flavors: allFlavorsJson {\n      nodes {\n        casNumbers\n        name\n        vendor\n      }\n    }\n    ingredients: allIngredientsJson {\n      nodes {\n        casNumber\n        category\n        name\n      }\n    }\n    vendors: allVendorsJson {\n      nodes {\n        code\n        name\n        flavorCount\n      }\n    }\n  }\n`;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { Card, ListGroupItem, ListGroup, Badge } from 'react-bootstrap';\n\nimport { getCategoryVariant, getFlavorSlug, getIngredientSlug } from '~utils';\n\nexport default class VendorCard extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    flavorCount: PropTypes.number.isRequired,\n    link: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired\n    }),\n    description: PropTypes.string,\n    flavors: PropTypes.arrayOf(PropTypes.object),\n    ingredients: PropTypes.arrayOf(PropTypes.object)\n  };\n\n  get description() {\n    const { description } = this.props;\n\n    return description ? <p>{description}</p> : null;\n  }\n\n  get flavors() {\n    const { flavors } = this.props;\n\n    return flavors?.length ? (\n      <Fragment>\n        <h6 className=\"my-3\">\n          Flavors with concerning ingredients ({flavors.length})\n        </h6>\n        <ListGroup activeKey=\"\">\n          {flavors.map(flavor => (\n            <ListGroupItem\n              action\n              as={Link}\n              key={flavor.name}\n              to={getFlavorSlug(flavor)}\n            >\n              {flavor.name}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Fragment>\n    ) : null;\n  }\n\n  get ingredients() {\n    const { ingredients } = this.props;\n\n    const sortedIngredients = [...ingredients];\n\n    sortedIngredients.sort(\n      (a, b) =>\n        a.category.toLowerCase().localeCompare(b.category.toLowerCase()) ||\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n    );\n\n    return sortedIngredients?.length ? (\n      <Fragment>\n        <h6 className=\"my-3\">\n          Ingredients used by this vendor ({sortedIngredients.length})\n        </h6>\n        <ListGroup activeKey=\"\">\n          {sortedIngredients.map(ingredient => (\n            <ListGroupItem\n              action\n              as={Link}\n              key={ingredient.casNumber}\n              to={getIngredientSlug(ingredient)}\n              variant={getCategoryVariant(ingredient.category)}\n            >\n              {ingredient.name}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Fragment>\n    ) : null;\n  }\n\n  render() {\n    const { code, link, name, flavorCount } = this.props;\n\n    return (\n      <Card className=\"my-3\">\n        <Card.Header>\n          <h3>\n            <span>{name}</span>\n            {link ? (\n              <span className=\"ml-auto\">\n                <a href={link.href} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {link.title}\n                </a>\n              </span>\n            ) : null}\n            <span> ({code})</span>\n            <Badge variant=\"secondary\" className=\"float-right\">\n              {flavorCount} flavors\n            </Badge>\n          </h3>\n        </Card.Header>\n        <Card.Body>\n          {this.description}\n          {this.flavors}\n          {this.ingredients}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n"],"sourceRoot":""}